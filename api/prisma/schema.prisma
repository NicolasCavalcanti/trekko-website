generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model HealthCheck {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  status    String   @default("ok")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  passwordHash String
  name         String?
  role         String        @default("user")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  sessions     AuthSession[]
  auditLogs    AuditLog[]
}

model AuthSession {
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  tokenHash String    @unique
  expiresAt DateTime
  createdAt DateTime  @default(now())
  revokedAt DateTime?

  @@index([userId])
  @@index([expiresAt])
}

model AuditLog {
  id        String   @id @default(uuid())
  userId    String?
  entity    String
  entityId  String?
  action    String
  diff      Json?
  ip        String?
  userAgent String?
  createdAt DateTime @default(now())

  user User? @relation(fields: [userId], references: [id], onDelete: SetNull)

  @@index([userId])
  @@index([entity, entityId])
}

model State {
  id        String   @id @default(uuid())
  name      String   @unique
  code      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cities    City[]

  @@index([code])
}

model City {
  id        String   @id @default(uuid())
  name      String
  stateId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  state State @relation(fields: [stateId], references: [id], onDelete: Cascade)
  parks Park[]

  @@unique([stateId, name])
  @@index([stateId])
  @@index([name])
}

model Park {
  id        String   @id @default(uuid())
  name      String
  cityId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  city City @relation(fields: [cityId], references: [id], onDelete: Cascade)

  @@unique([cityId, name])
  @@index([cityId])
  @@index([name])
}
