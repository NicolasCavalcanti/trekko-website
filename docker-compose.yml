version: '3.9'

services:
  api:
    build:
      context: ./api
      target: development
    command: sh -c "npm install --legacy-peer-deps && npm run dev"
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/trekko?schema=public}
      JWT_SECRET: ${JWT_SECRET:-change-me}
      REFRESH_SECRET: ${REFRESH_SECRET:-change-me-refresh}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID:-local-access-key}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY:-local-secret-key}
      S3_BUCKET: ${S3_BUCKET:-trekko-dev}
      S3_REGION: ${S3_REGION:-us-east-1}
      S3_ENDPOINT: ${S3_ENDPOINT:-http://minio:9000}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:5173}
      COMMISSION_BPS_DEFAULT: ${COMMISSION_BPS_DEFAULT:-500}
    volumes:
      - ./api:/usr/src/app
      - api-node-modules:/usr/src/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: trekko
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  api-node-modules:
  postgres-data:
